apply plugin: 'com.android.application'
apply plugin: 'com.alibaba.arouter'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    defaultConfig {
        applicationId "me.wally.gankio"
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode 100
        versionName "1.0.0"
        flavorDimensions "100"
        vectorDrawables.useSupportLibrary = true

        multiDexEnabled true

        ndk {
            abiFilters 'armeabi'
        }

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName(), AROUTER_GENERATE_DOC: "enable"]
            }
        }

        dexOptions {
            javaMaxHeapSize "4g"
            preDexLibraries = false
        }
    }

    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }

    buildTypes {
        debug {
            debuggable true
        }
        release {
            debuggable false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        disable 'InvalidPackage'
        checkReleaseBuilds false
        //禁止在构建时Lint进行严格检查导致中断构建
        abortOnError false
        disable 'MissingTranslation', 'ExtraTranslation', 'GoogleAppIndexingWarning'
    }
}

def baseName = "service"
def baseinfo = rootProject.ext.modules.get(baseName)

def homeName = "home"
def homeinfo = rootProject.ext.modules.get(homeName)

def welfareName = "welfare"
def welfareinfo = rootProject.ext.modules.get(welfareName)

def collectName = "collect"
def collectinfo = rootProject.ext.modules.get(collectName)

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    //base
    if (baseinfo.alone) {
        api group: rootProject.ext.moduleGroup, name: baseName, version: baseinfo.version
    } else {
        api project(":$baseName")
    }

    //home
    if (homeinfo.alone) {
        api group: rootProject.ext.moduleGroup, name: homeName, version: homeinfo.version
    } else {
        api project(":$homeName")
    }

    //welfare
    if (welfareinfo.alone) {
        api group: rootProject.ext.moduleGroup, name: welfareName, version: welfareinfo.version
    } else {
        api project(":$welfareName")
    }

    //collect
    if (collectinfo.alone) {
        api group: rootProject.ext.moduleGroup, name: collectName, version: collectinfo.version
    } else {
        api project(":$collectName")
    }

    api rootProject.ext.deps.free_proGuard

    annotationProcessor rootProject.ext.deps.ARoutercompiler
    annotationProcessor rootProject.ext.deps.jetpack_lifecycle_compiler

    testImplementation rootProject.ext.deps.junit
    androidTestImplementation rootProject.ext.deps.runner
    androidTestImplementation rootProject.ext.deps.espresso
}